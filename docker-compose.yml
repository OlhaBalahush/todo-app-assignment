services:
  # Database service
  database:
    image: postgres:15-alpine
    container_name: todo-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=todo_db
      - POSTGRES_USER=todo_user
      - POSTGRES_PASSWORD=todo_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo_user -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/todo_db
      - SPRING_DATASOURCE_USERNAME=todo_user
      - SPRING_DATASOURCE_PASSWORD=todo_password
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      database:
        condition: service_healthy
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres-data:
    driver: local

networks:
  todo-network:
    driver: bridge